{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"carowners/models/","title":"\u0417\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<pre><code>class CarOwner(models.Model):\n    id_owner = models.AutoField(primary_key=True)\n    surname = models.CharField(max_length=30)\n    name = models.CharField(max_length=30)\n    birthDate = models.DateTimeField(null=True, blank=True)\n\n    def __str__(self):\n        return f\"{self.surname} {self.name}\"\n\n\nclass Vehicle(models.Model):\n    id_vehicle = models.AutoField(primary_key=True)\n    gosNumber = models.CharField(max_length=15)\n    brand = models.CharField(max_length=20)\n    model = models.CharField(max_length=20)\n    color = models.CharField(max_length=30, null=True, blank=True)\n\n    def __str__(self):\n        return f\"{self.brand} {self.color} ({self.gosNumber})\"\n\n\nclass Ownership(models.Model):\n    id_owner_car = models.AutoField(primary_key=True)\n    id_owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE, related_name='ownerships')\n    id_vehicle = models.ForeignKey(Vehicle, on_delete=models.CASCADE, related_name='ownerships')\n    data_start = models.DateTimeField(default=timezone.now)\n    data_end = models.DateTimeField(null=True, blank=True)\n\n    def __str__(self):\n        return f\"{self.id_owner} owns {self.id_vehicle}\"\n\n\nclass DriveLicense(models.Model):\n    id_license = models.AutoField(primary_key=True)\n    id_owner = models.ForeignKey(CarOwner, on_delete=models.CASCADE, related_name='licenses')\n    license_number = models.CharField(max_length=10)\n    type = models.CharField(max_length=10)\n    data_issue = models.DateTimeField(default=timezone.now)\n\n    def __str__(self):\n        return f\"{self.license_number} ({self.type})\"\n</code></pre>"},{"location":"carowners/reguests/","title":"\u0417\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<pre><code>#1. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d\nfrom lab3.models import Vehicle\n\ntoyota_cars = Vehicle.objects.filter(brand=\"Toyota\")\nfor car in toyota_cars:\n    print(car)\n#2. \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d\nfrom lab3.models import CarOwner\n\noleg_drivers = CarOwner.objects.filter(name=\"Alexey\")\nfor driver in oleg_drivers:\n    print(driver)\n\n#3.\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u043f\u043e ID \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\nfrom lab3.models import CarOwner, DriveLicense\nimport random\n\nowners = CarOwner.objects.all()\nrandom_owner = random.choice(owners)\n\nowner_id = random_owner.id_owner\nprint(f\"Owner ID: {owner_id}\")\n\nlicense = DriveLicense.objects.get(id_owner=owner_id)\nprint(license)\n\n#4. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d\nfrom lab3.models import Vehicle, Ownership, CarOwner\n\nred_cars = Vehicle.objects.filter(color=\"Red\")\n\n\nfor car in red_cars:\n    owners = car.ownerships.all()\n    for ownership in owners:\n        print(ownership.id_owner)\n#5. \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 \u0433\u043e\u0434\u0430\nfrom lab3.models import Ownership\n\nowners_2010 = Ownership.objects.filter(data_start__year=2010)\nfor ownership in owners_2010:\n    print(ownership.id_owner)\n\n#1. \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f\nfrom lab3.models import DriveLicense\n\noldest_license = DriveLicense.objects.earliest('data_issue')\nprint(f\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: {oldest_license.data_issue}\")\n#2. \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439\nfrom lab3.models import Vehicle, Ownership\n\n#\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043c\u0430\u0448\u0438\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u0431\u0430\u0437\u0435\nlatest_ownership = Ownership.objects.filter(id_vehicle__in=Vehicle.objects.all()).latest('data_start')\nprint(f\"\u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439: {latest_ownership.data_start}\")\n#3. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\nfrom django.db.models import Count\nfrom lab3.models import CarOwner\n\nowners_car_count = CarOwner.objects.annotate(num_cars=Count('ownerships')).values('surname', 'name', 'num_cars')\n\nfor owner in owners_car_count:\n    print(f\"{owner['surname']} {owner['name']} - {owner['num_cars']} \u043c\u0430\u0448\u0438\u043d\")\n#4. \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438:\nfrom django.db.models import Count\nfrom lab3.models import Vehicle\n\ncar_counts_by_brand = Vehicle.objects.values('brand').annotate(num_cars=Count('brand'))\n\nfor car in car_counts_by_brand:\n    print(f\"{car['brand']} - {car['num_cars']}\")\n#5. \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c .distinct())\nfrom lab3.models import CarOwner\n\nowners_sorted_by_license_date = CarOwner.objects.filter(licenses__isnull=False).distinct().order_by('licenses__data_issue')\nfor owner in owners_sorted_by_license_date:\n    print(f\"{owner.name} - {owner.licenses.first().data_issue}\")\n</code></pre>"},{"location":"lab_flights/auth/","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f","text":"<p>\u0414\u043b\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439\u0416 1) \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435 http://localhost:8000/auth/token/login/  2) \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u043e\u043a\u0435\u043d http://localhost:8000/auth/token/login/  3) \u0412\u0432\u0435\u0441\u0442\u0438 \u044d\u0442\u043e\u0442 \u0442\u043e\u043a\u0435\u043d \u0432 \u0442\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043c\u043e\u0436\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c postman  4) \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435(http://localhost:8000/auth/current-user/) </p>"},{"location":"lab_flights/create_dbs/","title":"\u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0411\u0414","text":"<p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0434\u0431 (\u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c POST \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u044b\u043b\u043e\u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f, \u043d\u0430\u043f\u0440: http://localhost:8000/api/clients/create/)  \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430\u043c \u043d\u0430\u043f\u0440: http://localhost:8000/api/clients/ \u0414\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u044b\u0432\u0435\u0434\u0435\u0442 \u0432\u0441\u0435\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0438\u0445 \u0431\u0438\u043b\u0435\u0442\u044b </p>"},{"location":"lab_flights/models/","title":"\u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414","text":"<p>\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0431\u044b\u043b\u0430 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0442\u0435\u043c, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u043e\u0432 \u0432\u0432 \u0430\u044d\u0440\u043e\u043f\u043e\u0440\u0442\u0443 \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u044d\u0442\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0431\u044b\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 django </p> <pre><code>class Airline(models.Model):\n    company_name = models.CharField(max_length=50)\n    owner = models.CharField(max_length=50)\n    number_of_employees = models.IntegerField()\n\n    def __str__(self):\n        return self.company_name\n\nclass AircraftModel(models.Model):\n    model_number = models.IntegerField(primary_key=True)\n    manufacturer = models.CharField(max_length=30)\n    type = models.CharField(max_length=20)\n    number_of_seats = models.IntegerField()\n    speed = models.IntegerField()\n    purpose = models.CharField(max_length=50)\n    fuel_consumption = models.IntegerField()\n    payload_capacity = models.IntegerField()\n\n    def __str__(self):\n        return f\"{self.manufacturer} - {self.type}\"\n\nclass Aircraft(models.Model):\n    onBoard_number = models.CharField(max_length=20, primary_key=True)\n    company_name = models.ForeignKey(Airline, on_delete=models.CASCADE)\n    flight_hours = models.IntegerField()\n    last_maintenance_date = models.DateField()\n    manufacture_date = models.DateField()\n    model_number = models.ForeignKey(AircraftModel, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.onBoard_number\n\nclass Airport(models.Model):\n    airport_number = models.IntegerField(primary_key=True)\n    name = models.CharField(max_length=30)\n    address = models.CharField(max_length=50)\n    number_of_runways = models.IntegerField()\n    number_of_transits = models.IntegerField()\n    lounge_capacity = models.IntegerField()\n\n    def __str__(self):\n        return self.name\n\nclass Schedule(models.Model):\n    schedule_number = models.IntegerField(primary_key=True)\n    total_flight_time_hours = models.IntegerField()\n    periodicity = models.IntegerField()\n    departure_time = models.DateTimeField()\n    arrival_time = models.DateTimeField()\n    airport_number = models.ForeignKey(Airport, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f\"Schedule {self.schedule_number}\"\n\nclass TransitStop(models.Model):\n    transit_number = models.IntegerField(primary_key=True)\n    schedule_number = models.ForeignKey(Schedule, on_delete=models.CASCADE)\n    arrival_time = models.DateTimeField()\n    departure_time = models.DateTimeField()\n    time_in_airport_minutes = models.IntegerField()\n    airport_number = models.ForeignKey(Airport, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f\"Transit {self.transit_number}\"\n\nclass Flight(models.Model):\n    flight_number = models.IntegerField(primary_key=True)\n    onBoard_number = models.ForeignKey(Aircraft, on_delete=models.CASCADE)\n    schedule_number = models.ForeignKey(Schedule, on_delete=models.CASCADE)\n    departure_date = models.DateField()\n    arrival_date = models.DateField()\n    status = models.CharField(max_length=20)\n\n    def __str__(self):\n        return f\"Flight {self.flight_number}\"\n\nclass Employee(models.Model):\n    employee_code = models.IntegerField(primary_key=True)\n    company_name = models.ForeignKey('self', on_delete=models.SET_NULL, null=True, blank=True)\n    full_name = models.CharField(max_length=50)\n    flight_hours = models.IntegerField()\n    position = models.CharField(max_length=20)\n    phone_number = models.IntegerField()\n\n    def __str__(self):\n        return self.full_name\n\nclass Crew(models.Model):\n    crew_number = models.IntegerField(primary_key=True)\n    medical_check_date = models.DateField()\n    clearance_status = models.IntegerField()\n    flight_position = models.CharField(max_length=30)\n    flight_number = models.ForeignKey(Flight, on_delete=models.CASCADE)\n    employee_code = models.ForeignKey(Employee, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f\"Crew {self.crew_number} - Flight {self.flight_number}\"\n\nclass Ticket(models.Model):\n    ticket_number = models.IntegerField(primary_key=True)\n    flight_number = models.ForeignKey(Flight, on_delete=models.CASCADE)\n    seat_type = models.CharField(max_length=20)\n    boarding_number = models.IntegerField()\n    payment_type = models.CharField(max_length=20)\n    registration_status = models.CharField(max_length=20)\n    passenger_data = models.ForeignKey('Client', on_delete=models.CASCADE)\n\n    def __str__(self):\n        return f\"Ticket {self.ticket_number}\"\n\nclass Client(models.Model):\n    passenger_data = models.IntegerField(primary_key=True)\n    full_name = models.CharField(max_length=50)\n    phone_number = models.IntegerField()\n\n    def __str__(self):\n        return self.full_name\n</code></pre>"},{"location":"lab_flights/queries/","title":"\u0417\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0431\u0434","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0431\u0434 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0412\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u0442\u0430\u043a\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430</p>"},{"location":"lab_flights/queries/#1-toyota","title":"1. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d","text":"<pre><code>from lab3.models import Vehicle\n\ntoyota_cars = Vehicle.objects.filter(brand=\"Toyota\")\nfor car in toyota_cars:\n    print(car)\n</code></pre>"},{"location":"lab_flights/queries/#2","title":"2. \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d","text":"<pre><code>from lab3.models import CarOwner\n\noleg_drivers = CarOwner.objects.filter(name=\"Alexey\")\nfor driver in oleg_drivers:\n    print(driver)\n</code></pre>"},{"location":"lab_flights/queries/#3-id","title":"3.\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u043f\u043e ID \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430","text":"<pre><code>from lab3.models import CarOwner, DriveLicense\nimport random\n\nowners = CarOwner.objects.all()\nrandom_owner = random.choice(owners)\n\nowner_id = random_owner.id_owner\nprint(f\"Owner ID: {owner_id}\")\n\nlicense = DriveLicense.objects.get(id_owner=owner_id)\nprint(license)\n</code></pre>"},{"location":"lab_flights/queries/#4","title":"4. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d","text":"<pre><code>from lab3.models import Vehicle, Ownership, CarOwner\n\nred_cars = Vehicle.objects.filter(color=\"Red\")\n\n\nfor car in red_cars:\n    owners = car.ownerships.all()\n    for ownership in owners:\n        print(ownership.id_owner)\n</code></pre>"},{"location":"lab_flights/queries/#5-2010","title":"5. \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 \u0433\u043e\u0434\u0430","text":"<pre><code>from lab3.models import Ownership\n\nowners_2010 = Ownership.objects.filter(data_start__year=2010)\nfor ownership in owners_2010:\n    print(ownership.id_owner)\n</code></pre>"},{"location":"lab_flights/queries/#1","title":"1. \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f","text":"<pre><code>from lab3.models import DriveLicense\n\noldest_license = DriveLicense.objects.earliest('data_issue')\nprint(f\"\u0414\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: {oldest_license.data_issue}\")\n</code></pre>"},{"location":"lab_flights/queries/#2-","title":"2. \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439","text":"<pre><code>from lab3.models import Vehicle, Ownership\n\nlatest_ownership = Ownership.objects.filter(id_vehicle__in=Vehicle.objects.all()).latest('data_start')\nprint(f\"\u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439: {latest_ownership.data_start}\")\n</code></pre>"},{"location":"lab_flights/queries/#3","title":"3. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f","text":"<pre><code>from django.db.models import Count\nfrom lab3.models import CarOwner\n\nowners_car_count = CarOwner.objects.annotate(num_cars=Count('ownerships')).values('surname', 'name', 'num_cars')\n\nfor owner in owners_car_count:\n    print(f\"{owner['surname']} {owner['name']} - {owner['num_cars']} \u043c\u0430\u0448\u0438\u043d\")\n</code></pre>"},{"location":"lab_flights/queries/#4_1","title":"4. \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438:","text":"<pre><code>from django.db.models import Count\nfrom lab3.models import Vehicle\n\ncar_counts_by_brand = Vehicle.objects.values('brand').annotate(num_cars=Count('brand'))\n\nfor car in car_counts_by_brand:\n    print(f\"{car['brand']} - {car['num_cars']}\")\n</code></pre>"},{"location":"lab_flights/queries/#5-distinct","title":"5. \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c .distinct())","text":"<pre><code>from lab3.models import CarOwner\n\nowners_sorted_by_license_date = CarOwner.objects.filter(licenses__isnull=False).distinct().order_by('licenses__data_issue')\nfor owner in owners_sorted_by_license_date:\n    print(f\"{owner.name} - {owner.licenses.first().data_issue}\")\n</code></pre>"},{"location":"warriors/models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0451\u043c \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u044f \u043d\u0443\u0436\u043d\u044b\u0435 \u0441\u0432\u044f\u0437\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 related_name \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430  \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446</p> <pre><code>class Warrior(models.Model):\n   \"\"\"\n   \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430\n   \"\"\"\n\n   race_types = (\n       ('s', 'student'),\n       ('d', 'developer'),\n       ('t', 'teamlead'),\n   )\n   race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0420\u0430\u0441\u0441\u0430')\n   name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f')\n   level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0)\n   skill = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior',\n                                  related_name='warrior_skils')\n   profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f',\n                                  blank=True, null=True)\n\n\nclass Profession(models.Model):\n    \"\"\"\n    \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438\n    \"\"\"\n\n    title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')\n    description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435')\n\n\nclass Skill(models.Model):\n    \"\"\"\n    \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439\n    \"\"\"\n\n    title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435')\n\n    def __str__(self):\n        return self.title\n\n\nclass SkillOfWarrior(models.Model):\n    \"\"\"\n    \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430\n    \"\"\"\n\n    skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE)\n    warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE)\n    level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')\n</code></pre>"},{"location":"warriors/reguests/","title":"\u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 REST","text":"<pre><code>from rest_framework import serializers\nfrom .models import Warrior, Profession, Skill, SkillOfWarrior\n\nclass ProfessionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Profession\n        fields = '__all__'\n\nclass SkillSerializer(serializers.ModelSerializer):\n\n  class Meta:\n     model = Skill\n     fields = \"__all__\"\n\nclass SkillOfWarriorSerializer(serializers.ModelSerializer):\n    skill = SkillSerializer(read_only=True)\n\n    class Meta:\n        model = SkillOfWarrior\n        fields = ['skill', 'level']\n\nclass WarriorSerializer(serializers.ModelSerializer):\n    profession = ProfessionSerializer(read_only=True)\n    skill = SkillOfWarriorSerializer(source='skillofwarrior_set', many=True, read_only=True)\n\n    class Meta:\n        model = Warrior\n        fields = ['id', 'name', 'race', 'level', 'profession', 'skill']\n\nclass WarriorCreateSerializer(serializers.ModelSerializer):\n\n  class Meta:\n     model = Warrior\n     fields = \"__all__\"\n</code></pre>"},{"location":"warriors/views/","title":"\u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u043d\u0443\u0436\u043d\u044b\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b","text":"<pre><code># 1.\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445\nclass WarriorListView(generics.ListAPIView):\n    queryset = Warrior.objects.select_related('profession').all()\n    serializer_class = WarriorSerializer\n\n# 2.\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u0441\u0435\u0445 \u0432\u043e\u0439\u043d\u0430\u0445 \u0438 \u0438\u0445 \u0441\u043a\u0438\u043b\u0430\u0445\nclass WarriorSkillsListView(generics.ListAPIView):\n    queryset = Warrior.objects.prefetch_related('skill').all()\n    serializer_class = WarriorSerializer\n\n# 3.\u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435 (\u043f\u043e id), \u0435\u0433\u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0441\u043a\u0438\u043b\u0430\u0445\nclass WarriorDetailView(generics.RetrieveAPIView):\n    queryset = Warrior.objects.select_related('profession').prefetch_related('skill').all()\n    serializer_class = WarriorSerializer\n\n# 4.\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \u043f\u043e id\nclass WarriorDeleteView(generics.DestroyAPIView):\n    queryset = Warrior.objects.all()\n    serializer_class = WarriorSerializer\n\n# 5.\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0439\u043d\u0435\nclass WarriorUpdateView(generics.UpdateAPIView):\n    queryset = Warrior.objects.all()\n    serializer_class = WarriorSerializer\n</code></pre>"}]}